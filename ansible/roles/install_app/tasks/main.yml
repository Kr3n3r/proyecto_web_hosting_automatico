---
# Permisos, usuarios y grupos
- name : Creamos grupo de la aplicación
  group:
    name: "{{ app_group }}"
    state: present
    system: yes

- name : Creamos usuario de la aplicación
  user :
    name : "{{ app_user }}"
    state : present
    password : "{{ app_user_pass | password_hash('sha512','A512') }}"
    shell : /bin/bash
    group : "{{ app_group }}"

- name : Descargamos la aplicación
  git:
    repo: https://github.com/Kr3n3r/proyecto_web_hosting_automatico
    dest: /tmp/app/
    clone: yes

- name : Creamos el directorio para ansible
  file :
    path: /opt/ansible
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "755"

- name : Creamos el directorio para terraform
  file :
    path: /opt/terraform
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "755"

- name : Creamos el par de claves ssh
  openssh_keypair :
    path : "/opt/ansible/key"
    type : rsa
    size : 4096
    state : present
    force : no
 
- name: Encuentra la versión más actualizada de terraform
  uri:
    url: https://releases.hashicorp.com/terraform/index.json
    return_content: yes
  register: terraform_index
  check_mode: no

- name : Establece la versión de terraform a instalar(última)
  set_fact:
    terraform_version_to_install: "{{ (terraform_index.content | from_json).versions | reject('search','-') | list | last }}"

- name: Mira si terraform ya está instalado con la versión correspondiente
  command: "/usr/local/bin/terraform -version"
  register: terraform_installed_version
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name : Instala terraform si no está instalado ya
  unarchive:
    src: "https://releases.hashicorp.com/terraform/{{ terraform_version_to_install }}/terraform_{{ terraform_version_to_install }}_linux_amd64.zip"
    dest: "/usr/local/bin"
    remote_src: yes

- name: Instalar paquetes necesarios
  apt: pkg={{ item }}
  with_items:
    - apache2
    - apache2-dev
    - pip
    - git
    - unzip
    - ansible
    - python3-venv 

- name : Crear el directorio del venv
  file:
    name : /opt/app/.venv
    state : directory

- name : Mover los archivos de la aplicación a su carpeta correspondiente
  copy : src=/tmp/app/ dest=/opt/app/
